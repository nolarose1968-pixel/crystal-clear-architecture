#!/usr/bin/env bun

/**
 * Quick Start Script
 * Automates initial environment setup for new developers
 */

import { execSync } from 'child_process';
import { existsSync, copyFileSync, writeFileSync } from 'fs';

console.log('üöÄ Fire22 Dashboard Worker - Quick Start\n');

async function main() {
  try {
    // Step 1: Check prerequisites
    console.log('1Ô∏è‚É£  Checking prerequisites...');
    
    // Check if Bun is installed
    try {
      const bunVersion = execSync('bun --version', { encoding: 'utf8' }).trim();
      console.log(`   ‚úÖ Bun ${bunVersion} is installed`);
    } catch {
      console.log('   ‚ùå Bun is not installed. Please install Bun first:');
      console.log('      curl -fsSL https://bun.sh/install | bash');
      process.exit(1);
    }
    
    // Check if we're in the right directory
    if (!existsSync('package.json')) {
      console.log('   ‚ùå Not in project root. Please run this from the dashboard-worker directory.');
      process.exit(1);
    }
    
    console.log('   ‚úÖ Project structure looks good\n');
    
    // Step 2: Install dependencies
    console.log('2Ô∏è‚É£  Installing dependencies...');
    try {
      execSync('bun install', { stdio: 'inherit' });
      console.log('   ‚úÖ Dependencies installed\n');
    } catch {
      console.log('   ‚ùå Failed to install dependencies');
      process.exit(1);
    }
    
    // Step 3: Environment setup
    console.log('3Ô∏è‚É£  Setting up environment...');
    
    if (!existsSync('.env') && existsSync('.env.example')) {
      copyFileSync('.env.example', '.env');
      console.log('   ‚úÖ Created .env from .env.example');
      console.log('   ‚ö†Ô∏è  Please edit .env with your actual values\n');
    } else if (existsSync('.env')) {
      console.log('   ‚ÑπÔ∏è  .env file already exists');
    } else {
      console.log('   ‚ö†Ô∏è  No .env.example found, creating basic .env');
      const basicEnv = `# Dashboard Worker Environment Variables
# Generated by quick start script

# Database
DATABASE_NAME=fire22-dashboard
DATABASE_ID=35756984-dfe1-4914-b92e-511bdc8a194f

# Bot Configuration
BOT_TOKEN=your_telegram_bot_token_here
CASHIER_BOT_TOKEN=your_cashier_bot_token_here

# Fire22 Integration
FIRE22_API_URL=https://api.fire22.com
FIRE22_TOKEN=your_fire22_api_token_here
FIRE22_WEBHOOK_SECRET=your_webhook_secret_here

# Authentication
JWT_SECRET=your_super_secret_jwt_key_change_in_production
ADMIN_PASSWORD=admin123

# Payment Gateway (Stripe)
STRIPE_SECRET_KEY=sk_test_your_stripe_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# Communication Services
SENDGRID_API_KEY=your_sendgrid_key_here
TWILIO_ACCOUNT_SID=your_twilio_sid_here
TWILIO_AUTH_TOKEN=your_twilio_token_here

# System Configuration
CRON_SECRET=your_super_secret_cron_key_change_in_production

# Development Settings
NODE_ENV=development
BUN_CONFIG_VERBOSE_FETCH=0
BUN_CONFIG_MAX_HTTP_REQUESTS=256
`;
      writeFileSync('.env', basicEnv);
      console.log('   ‚úÖ Created basic .env file');
    }
    
    // Step 4: Validate environment
    console.log('\n4Ô∏è‚É£  Validating environment...');
    try {
      execSync('bun run env:validate', { stdio: 'inherit' });
      console.log('   ‚úÖ Environment validation passed\n');
    } catch {
      console.log('   ‚ö†Ô∏è  Environment validation failed. Please check your .env file\n');
    }
    
    // Step 5: Run health check
    console.log('5Ô∏è‚É£  Running health check...');
    try {
      execSync('bun run env:check', { stdio: 'inherit' });
      console.log('   ‚úÖ Health check completed\n');
    } catch {
      console.log('   ‚ö†Ô∏è  Health check failed\n');
    }
    
    // Step 6: Show next steps
    console.log('üéâ Quick start completed!\n');
    console.log('üìã Next steps:');
    console.log('1. Edit .env file with your actual API keys and secrets');
    console.log('2. Run: bun run env:validate');
    console.log('3. Run: bun run env:audit (security check)');
    console.log('4. Run: bun run env:integration (full test)');
    console.log('5. Run: bun run env:docs (open documentation)');
    console.log('\nüöÄ Ready to develop!');
    
  } catch (error) {
    console.error('‚ùå Quick start failed:', error);
    process.exit(1);
  }
}

// Run the main function
if (import.meta.main) {
  main();
}
