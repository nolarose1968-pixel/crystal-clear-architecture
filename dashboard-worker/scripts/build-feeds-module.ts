#!/usr/bin/env bun

/**
 * Build script to generate feeds module for Cloudflare Workers
 * This embeds feed content at build time since Workers can't access filesystem
 */

import { readFileSync, writeFileSync, existsSync } from 'fs';
import { join } from 'path';

const feedsDir = join(process.cwd(), 'src', 'feeds');
const outputFile = join(process.cwd(), 'src', 'feeds-content.ts');

// Read all feed files
const feedFiles = [
  'error-codes-rss.xml',
  'error-codes-atom.xml',
  'team-announcements-rss.xml',
  'team-announcements-atom.xml',
  'critical-errors-alert.xml',
  'index.html',
];

console.log('üì° Building RSS feeds module for Cloudflare Workers...');

// Generate the module content
let moduleContent = `/**
 * Auto-generated RSS/Atom feeds content
 * Generated at: ${new Date().toISOString()}
 * DO NOT EDIT - This file is auto-generated by scripts/build-feeds-module.ts
 */

export const feedsContent: Record<string, string> = {
`;

for (const file of feedFiles) {
  const filePath = join(feedsDir, file);
  if (existsSync(filePath)) {
    console.log(`  ‚úÖ Loading ${file}`);
    const content = readFileSync(filePath, 'utf-8');
    // Escape the content for JavaScript string
    const escapedContent = content
      .replace(/\\/g, '\\\\')
      .replace(/`/g, '\\`')
      .replace(/\${/g, '\\${');

    moduleContent += `  '${file}': \`${escapedContent}\`,\n`;
  } else {
    console.log(`  ‚ö†Ô∏è File not found: ${file}`);
  }
}

moduleContent += `};

export function getFeedContent(filename: string): string | undefined {
  return feedsContent[filename];
}

export function getAvailableFeeds(): string[] {
  return Object.keys(feedsContent);
}
`;

// Write the module
writeFileSync(outputFile, moduleContent);
console.log(`\n‚úÖ Feeds module generated at: ${outputFile}`);
console.log('üì° RSS feeds are ready for Cloudflare Workers deployment!');
