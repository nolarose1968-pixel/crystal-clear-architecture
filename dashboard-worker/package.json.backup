{
  "name": "fire22-dashboard-worker",
  "version": "2.0.0",
  "description": "A robust dashboard worker for the Fire22 sportsbook platform, handling API integrations, notifications, and analytics with comprehensive bun pm pkg testing capabilities",
  "main": "src/index.ts",
  "type": "module",
  "bin": {
    "fire22": "./fire22-cli.js",
    "fire22-workspace": "./scripts/workspace-cli.ts",
    "fire22-ws": "./scripts/workspace-cli.ts"
  },
  "sideEffects": [
    "./src/index.ts",
    "./src/**/*.css",
    "./src/**/*.setup.ts",
    "./src/**/*.config.ts",
    "./src/**/*.global.ts"
  ],
  "author": {
    "name": "Fire22 Development Team",
    "email": "dev@fire22.com",
    "url": "https://fire22.com",
    "role": "lead-developer"
  },
  "contributors": [
    {
      "name": "Nola Rose",
      "email": "nolarose@example.com",
      "role": "lead-developer",
      "skills": [
        "typescript",
        "bun",
        "cloudflare",
        "architecture"
      ]
    },
    {
      "name": "Backend Team Lead",
      "email": "backend@fire22.com",
      "role": "backend-developer",
      "skills": [
        "nodejs",
        "sql",
        "api-design",
        "databases"
      ]
    }
  ],
  "license": "Proprietary",
  "repository": {
    "type": "git",
    "url": "https://github.com/brendadeeznuts1111/fire22-dashboard-worker",
    "issues": "https://github.com/brendadeeznuts1111/fire22-dashboard-worker/issues",
    "wiki": "https://github.com/brendadeeznuts1111/fire22-dashboard-worker/wiki"
  },
  "homepage": "https://dashboard-worker.brendawill2233.workers.dev",
  "bugs": {
    "url": "https://github.com/brendadeeznuts1111/fire22-dashboard-worker/issues",
    "email": "bugs@fire22.com"
  },
  "funding": {
    "type": "patreon",
    "url": "https://patreon.com/fire22"
  },
  "scripts": {
    "docs:start": "docusaurus start",
    "docs:build": "docusaurus build",
    "docs:swizzle": "docusaurus swizzle",
    "docs:deploy": "docusaurus deploy",
    "docs:clear": "docusaurus clear",
    "docs:serve": "docusaurus serve",
    "docs:sanitize": "bun run scripts/sanitize-mdx.ts",
    "docs:sanitize:all": "bun run scripts/sanitize-mdx.ts docs",
    "build:css": "bun run bun.build.config.ts production",
    "build:css:dev": "bun run bun.build.config.ts development",
    "watch:css": "bun run bun.build.config.ts watch",
    "format:old": "prettier --write .",
    "format:check:old": "prettier --check .",
    "lint:old": "eslint . --ext .ts,.tsx,.js,.jsx --cache",
    "lint:fix:old": "eslint . --ext .ts,.tsx,.js,.jsx --fix --cache",
    "typecheck": "tsc --noEmit",
    "quality:check": "bun run format:check && bun run lint && bun run typecheck",
    "quality:fix": "bun run format && bun run lint:fix",
    "fire22": "node fire22-cli.js",
    "f22": "node fire22-cli.js",
    "demo": "bun run scripts/fire22-interactive-demo.ts",
    "demo:core": "bun run scripts/core/enhanced-demo.ts",
    "demo:dashboard": "bun run scripts/dev-server.ts --demo",
    "demo:web": "bunx serve src/enhanced-dashboard-demo.html -p 8080",
    "demo:activity": "bun run scripts/fire22-activity-monitor.ts",
    "demo:analyzer": "bun run scripts/fire22-simple-analyzer.ts",
    "demo:suite": "bun run scripts/fire22-demo-suite.ts",
    "demo:nav": "bunx serve src/components/fire22-navigation.html -p 8081",
    "demo:language": "bun run scripts/fire22-language-demo.ts",
    "demo:interactive": "bun run scripts/fire22-interactive-demo.ts",
    "demo:api": "bun run scripts/fire22-api-integration-demo.ts --all",
    "start": "bun --user-agent=\"Fire22-Dashboard/3.0.9\" run src/index.ts",
    "dev": "bun --user-agent=\"Fire22-Dashboard/3.0.9 (Development)\" --watch src/index.ts",
    "dev-server": "bun --user-agent=\"Fire22-Dashboard/3.0.9\" run scripts/dev-server.ts",
    "build": "bun run build.ts",
    "build:quick": "bun run build.ts quick",
    "build:standard": "bun run build.ts standard",
    "build:production": "bun run build.ts production",
    "build:full": "bun run build.ts full",
    "build:packages": "bun run build.ts packages",
    "build:docs": "bun run build.ts docs",
    "build:version": "bun run build.ts version",
    "build:list": "bun run build.ts list",
    "build:help": "bun run build.ts help",
    "build:manual": "bun build ./src/index.ts --target=bun --outdir ./dist",
    "build:analyze": "bun build ./src/index.ts --target=bun --outdir ./dist --analyze",
    "build:executable": "bun run build:executable:dev",
    "build:executable:dev": "bun build ./src/index.ts --compile --outfile=./dist/fire22-dev --compile-exec-argv=\"--env=development --debug --port=3000\" --define ENVIRONMENT='\"development\"' --define DEBUG_MODE='true' --define LOG_LEVEL='\"debug\"' --define API_URL='\"http://localhost:3000\"' --define VERSION='\"3.0.8\"' --define BUILD_TIME='\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"'",
    "build:executable:staging": "bun build ./src/index.ts --compile --outfile=./dist/fire22-staging --compile-exec-argv=\"--env=staging --monitor --port=3001\" --define ENVIRONMENT='\"staging\"' --define DEBUG_MODE='false' --define LOG_LEVEL='\"info\"' --define API_URL='\"https://staging-api.fire22.com\"' --define VERSION='\"3.0.8\"' --define BUILD_TIME='\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"'",
    "build:executable:prod": "bun build ./src/index.ts --compile --outfile=./dist/fire22-production --compile-exec-argv=\"--env=production --optimize --port=8080\" --define ENVIRONMENT='\"production\"' --define DEBUG_MODE='false' --define LOG_LEVEL='\"warn\"' --define API_URL='\"https://api.fire22.com\"' --define VERSION='\"3.0.8\"' --define BUILD_TIME='\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"' --minify --sourcemap --bytecode",
    "build:executable:demo": "bun build ./src/index.ts --compile --outfile=./dist/fire22-demo --compile-exec-argv=\"--env=demo --demo-mode --port=3002\" --define ENVIRONMENT='\"demo\"' --define DEBUG_MODE='true' --define LOG_LEVEL='\"debug\"' --define API_URL='\"https://demo-api.fire22.com\"' --define VERSION='\"3.0.8\"' --define BUILD_TIME='\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"'",
    "build:executable:windows": "bun build ./src/index.ts --compile --outfile=./dist/Fire22-Dashboard.exe --compile-exec-argv=\"--env=production --optimize --port=8080\" --define ENVIRONMENT='\"production\"' --define DEBUG_MODE='false' --define LOG_LEVEL='\"warn\"' --define API_URL='\"https://api.fire22.com\"' --define VERSION='\"3.0.8\"' --define BUILD_TIME='\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"' --windows-title=\"Fire22 Dashboard Worker\" --windows-publisher=\"Fire22 Development Team\" --windows-version=\"3.0.8\" --windows-description=\"Professional dashboard worker for the Fire22 sportsbook platform\" --windows-copyright=\"Â© 2024 Fire22 Development Team\" --minify --sourcemap",
    "build:executable:all": "bun run build:executable:dev && bun run build:executable:staging && bun run build:executable:prod && bun run build:executable:demo",
    "build:executable:cross-platform": "bun run build:executable:prod && bun run build:executable:windows",
    "build:enhanced": "bun run scripts/enhanced-build.ts",
    "build:enhanced:dev": "bun run scripts/enhanced-build.ts development",
    "build:enhanced:staging": "bun run scripts/enhanced-build.ts staging",
    "build:enhanced:prod": "bun run scripts/enhanced-build.ts production --bytecode --minify",
    "build:enhanced:demo": "bun run scripts/enhanced-build.ts demo",
    "build:enhanced:windows": "bun run scripts/enhanced-build.ts production --windows --bytecode --minify",
    "build:enhanced:all": "bun run build:enhanced:dev && bun run build:enhanced:staging && bun run build:enhanced:prod && bun run build:enhanced:demo",
    "build:enhanced:clean": "bun run scripts/enhanced-build.ts production --clean --bytecode --minify",
    "enhanced-build:compile": "bun run scripts/enhanced-build-compile.ts",
    "enhanced-build:compile:dev": "bun run scripts/enhanced-build-compile.ts --development",
    "enhanced-build:compile:staging": "bun run scripts/enhanced-build-compile.ts --staging",
    "enhanced-build:compile:prod": "bun run scripts/enhanced-build-compile.ts --production",
    "enhanced-build:compile:demo": "bun run scripts/enhanced-build-compile.ts --demo",
    "enhanced-build:compile:custom": "bun run scripts/enhanced-build-compile.ts --custom",
    "enhanced-build:compile:info": "bun run scripts/enhanced-build-compile.ts --info",
    "enhanced-build:compile:help": "bun run scripts/enhanced-build-compile.ts --help",
    "build:generate-commands": "bun run scripts/generate-build-commands.ts",
    "build:with-defines": "bun run scripts/enhanced-build-with-defines.ts",
    "build:with-defines:dev": "bun run scripts/enhanced-build-with-defines.ts development",
    "build:with-defines:staging": "bun run scripts/enhanced-build-with-defines.ts staging",
    "build:with-defines:prod": "bun run scripts/enhanced-build-with-defines.ts production",
    "build:with-defines:demo": "bun run scripts/enhanced-build-with-defines.ts demo",
    "build:with-defines:all": "bun run scripts/enhanced-build-with-defines.ts --all",
    "build:optimized": "bun run scripts/enhanced-build-with-defines.ts production --minify --sourcemap=false",
    "build:constants:verify": "bun run src/constants-definitions.ts",
    "build:user-agent": "bun run scripts/build-user-agent.ts",
    "build:user-agent:dev": "bun run scripts/build-user-agent.ts development",
    "build:user-agent:staging": "bun run scripts/build-user-agent.ts staging --minify",
    "build:user-agent:prod": "bun run scripts/build-user-agent.ts production --minify --bytecode --secure-cookies",
    "build:user-agent:demo": "bun run scripts/build-user-agent.ts demo",
    "build:user-agent:all": "bun run scripts/build-user-agent.ts production all --secure-cookies",
    "build:user-agent:windows": "bun run scripts/build-user-agent.ts production --windows --minify --secure-cookies",
    "build:user-agent:custom": "bun run scripts/build-user-agent.ts production --user-agent='Fire22-Custom/1.0' --secure-cookies",
    "build:user-agent:with-cookies": "bun run scripts/build-user-agent.ts production --minify --secure-cookies --cookie-domain=.fire22.ag",
    "test:user-agent": "bun run scripts/test-user-agent.ts",
    "test:user-agent:current": "bun --user-agent='Fire22-Test/1.0' run scripts/test-user-agent.ts current",
    "test:user-agent:ansi": "bun run scripts/test-user-agent.ts ansi",
    "test:user-agent:flags": "bun run scripts/test-user-agent.ts flags",
    "test:user-agent:env": "BUN_USER_AGENT='Fire22-Env/1.0' bun run scripts/test-user-agent.ts env",
    "test:user-agent:perf": "bun run scripts/test-user-agent.ts perf",
    "test": "jest",
    "test:quick": "bun run test-quick.bun.ts",
    "test:checklist": "bun run test-checklist.bun.ts",
    "test:integration": "bun run scripts/integration-test.ts",
    "test:integration:all": "bun run scripts/test-integration.ts",
    "test:smoke": "bun run scripts/test-integration.ts --smoke",
    "test:fire22": "bun run scripts/test-fire22-compatibility.ts",
    "status:fire22": "bun run scripts/fire22-status.ts",
    "demo:populate": "bun run scripts/populate-demo-data.ts",
    "demo:reset": "bun run scripts/reset-demo-data.ts",
    "test:coverage": "bun test --coverage",
    "test:watch": "bun test --watch",
    "test:integration:unit": "bun test --test-name-pattern='integration'",
    "test:e2e": "bun test --test-name-pattern='e2e'",
    "test:ai-friendly": "CLAUDECODE=1 bun test",
    "test:performance": "bun test --test-name-pattern='performance'",
    "balance:demo": "bun run scripts/balance-enhancements-demo.ts",
    "balance:test": "bun test src/api/test/balance-management.test.ts",
    "balance:init": "bun run -e 'import { initializeBalanceTables } from \"./src/balance-management\"; await initializeBalanceTables(); console.log(\"â Balance tables initialized\");'",
    "lint": "bun run lint:check",
    "lint:check": "bunx --package eslint@8.56.0 --ext .ts src/",
    "lint:fix": "bunx --package eslint@8.56.0 --ext .ts src/ --fix",
    "lint:domains": "bun run scripts/lint-domains.ts",
    "timestamp:demo": "bun run scripts/timestamp-demo.ts",
    "format": "bunx --package prettier@3.1.1 --write src/**/*.ts",
    "format:check": "bunx --package prettier@3.1.1 --check src/**/*.ts",
    "clean": "rm -rf dist node_modules/.cache",
    "clean:all": "rm -rf dist node_modules bun.lockb",
    "clean:executables": "rm -rf dist/*.exe dist/fire22-*",
    "install:clean": "bun run clean:all && bun install",
    "prepack": "bun run build",
    "postpack": "bun run clean",
    "prepublishOnly": "bun run test:checklist && bun run build:prod",
    "postpublish": "bun run clean",
    "deploy": "wrangler deploy",
    "deploy:staging": "wrangler deploy --env staging",
    "deploy:fire22": "bun run test:fire22 && wrangler deploy",
    "deploy:prod": "wrangler deploy --env production",
    "rollback": "wrangler rollback",
    "monitor:watch": "bun --watch monitor-health.bun.ts",
    "validate": "bun run validate-deployment.bun.ts",
    "analyze": "bun run build:analyze",
    "bundle": "bun run scripts/bundle.ts",
    "deps:audit": "bun run scripts/deps-audit.ts",
    "deps:update": "bun update",
    "deps:outdated": "bun outdated",
    "deps:check": "bun pm ls --all",
    "deps:update:interactive": "bun update --interactive",
    "deps:update:production": "bun update --production --interactive",
    "deps:update:dev": "bun update --dev --interactive",
    "cache:clear": "bun pm cache rm",
    "cache:info": "bun pm cache",
    "version:patch": "bun run scripts/version.ts patch",
    "version:minor": "bun run scripts/version.ts minor",
    "version:major": "bun run scripts/version.ts major",
    "version:prerelease": "bun pm version prerelease --preid beta",
    "version:status": "bun run scripts/version-cli.ts status",
    "version:bump": "bun run scripts/version-cli.ts bump",
    "version:build": "bun run scripts/version-cli.ts build",
    "version:changelog": "bun run scripts/version-cli.ts changelog",
    "version:list": "bun run scripts/version-cli.ts list",
    "version:graph": "bun run scripts/version-cli.ts graph",
    "version:constants": "bun run scripts/version-cli.ts constants",
    "version:help": "bun run scripts/version-cli.ts help",
    "version:bump:patch": "bun run scripts/version-cli.ts bump --strategy patch --build --changelog",
    "version:bump:minor": "bun run scripts/version-cli.ts bump --strategy minor --build --commit --tag --changelog",
    "version:bump:major": "bun run scripts/version-cli.ts bump --strategy major --build --commit --tag --changelog",
    "version:release": "bun run scripts/version-cli.ts bump --strategy patch --build --commit --tag --push --changelog --verbose",
    "version:release:minor": "bun run scripts/version-cli.ts bump --strategy minor --build --commit --tag --push --changelog --verbose",
    "version:release:major": "bun run scripts/version-cli.ts bump --strategy major --build --commit --tag --push --changelog --verbose",
    "version:workspace": "bun run scripts/version-cli.ts status --verbose",
    "version:init": "bun run scripts/version.ts init",
    "version:integration": "bun run scripts/version-integration.ts",
    "telegram:integration": "bun run scripts/telegram-integration.ts",
    "telegram:bot": "bun run scripts/telegram-integration.ts",
    "telegram:demo": "bun run scripts/telegram-integration.ts demo",
    "business:demo": "bun run scripts/business-management-demo.ts",
    "business:vip": "bun run scripts/business-management-demo.ts vip",
    "business:groups": "bun run scripts/business-management-demo.ts groups",
    "business:affiliate": "bun run scripts/business-management-demo.ts affiliate",
    "business:commission": "bun run scripts/business-management-demo.ts commission",
    "business:linking": "bun run scripts/business-management-demo.ts linking",
    "business:stats": "bun run scripts/business-management-demo.ts stats",
    "casino:demo": "bun run scripts/live-casino-demo.ts",
    "test:withdrawals": "bun run scripts/test-withdrawal-system.ts",
    "test:queue": "bun run scripts/test-queue-system.ts",
    "queue:demo": "bun run scripts/queue-demo.ts",
    "html:import:demo": "bun run scripts/html-import-demo.ts",
    "html:import:report": "bun run scripts/html-import-demo.ts --report",
    "casino:games": "bun run scripts/live-casino-demo.ts games",
    "casino:rates": "bun run scripts/live-casino-demo.ts rates",
    "casino:sessions": "bun run scripts/live-casino-demo.ts sessions",
    "side-effects:demo": "bun run scripts/side-effects-demo.ts",
    "side-effects:analyze": "bun run build:analyze",
    "side-effects:validate": "bun run build:quick",
    "casino:revenue": "bun run scripts/live-casino-demo.ts revenue",
    "casino:performance": "bun run scripts/live-casino-demo.ts performance",
    "casino:stats": "bun run scripts/live-casino-demo.ts stats",
    "health:permissions": "bun run scripts/test-permissions-health.ts",
    "health:permissions-matrix": "bun run scripts/test-permissions-health.ts matrix",
    "health:comprehensive": "bun run scripts/test-permissions-health.ts",
    "matrix:health": "bun run scripts/matrix-health.ts",
    "monitor": "bun run scripts/real-time-monitor.ts",
    "monitor:performance": "bun run scripts/performance-monitor.ts",
    "qa": "bun run scripts/qa-automation.ts",
    "qa:parallel": "bun run scripts/qa-automation.ts --parallel",
    "qa:strict": "bun run scripts/qa-automation.ts --strict",
    "pre-commit": "bun run scripts/pre-commit-check.ts",
    "health:integrated": "bun run scripts/integrated-health-system.ts",
    "health:dry-run": "bun run scripts/integrated-health-system.ts",
    "dry-run": "bun run scripts/dry-run-validator.ts",
    "dry-run:deployment": "bun run scripts/dry-run-validator.ts deployment",
    "dry-run:config": "bun run scripts/dry-run-validator.ts config",
    "matrix:validate": "bun run scripts/matrix-health.ts validate",
    "matrix:repair": "bun run scripts/matrix-health.ts repair",
    "matrix:status": "bun run scripts/matrix-health.ts status",
    "matrix:history": "bun run scripts/matrix-health.ts history",
    "matrix:summary": "bun run scripts/matrix-health.ts summary",
    "matrix:test": "bun run scripts/test-matrix-api.ts",
    "matrix:configs": "bun run scripts/test-matrix-api.ts configs",
    "matrix:score": "bun run scripts/test-matrix-api.ts score",
    "matrix:enhanced": "bun run scripts/test-enhanced-matrix.ts",
    "package:info": "bun run scripts/package-info-display.ts",
    "package:core": "bun run scripts/package-info-display.ts core",
    "package:matrix": "bun run scripts/package-info-display.ts matrix",
    "package:summary": "bun run scripts/package-info-display.ts summary",
    "package:bunx": "bun run scripts/package-info-display.ts bunx",
    "package:scripts": "bun run scripts/package-info-display.ts scripts",
    "package:deps": "bun run scripts/package-info-display.ts deps",
    "package:quickstart": "bun run scripts/package-info-display.ts quickstart",
    "sports:demo": "bun run scripts/sports-betting-demo.ts",
    "sports:events": "bun run scripts/sports-betting-demo.ts events",
    "sports:betting": "bun run scripts/sports-betting-demo.ts betting",
    "sports:rates": "bun run scripts/sports-betting-demo.ts rates",
    "sports:risk": "bun run scripts/sports-betting-demo.ts risk",
    "sports:vip": "bun run scripts/sports-betting-demo.ts vip",
    "sports:winning": "bun run scripts/sports-betting-demo.ts winning",
    "sports:stats": "bun run scripts/sports-betting-demo.ts stats",
    "payment:demo": "bun run scripts/payment-reference-demo.ts",
    "payment:create": "bun run scripts/payment-reference-demo.ts create",
    "payment:status": "bun run scripts/payment-reference-demo.ts status",
    "payment:history": "bun run scripts/payment-reference-demo.ts history",
    "payment:telegram": "bun run scripts/payment-reference-demo.ts telegram",
    "payment:test": "bun run scripts/payment-reference-demo.ts test",
    "pack": "bun pm pack",
    "pack:quiet": "bun pm pack --quiet",
    "pack:dry": "bun pm pack --dry-run",
    "pack:test": "bun pm pack --dry-run",
    "pack:create": "bun pm pack --destination ./packages",
    "pack:dist": "bun pm pack --destination ./dist/packages",
    "pack:release": "bun pm pack --destination ./dist/releases --gzip-level 9",
    "pack:ci": "bun pm pack --quiet --destination ./dist/ci",
    "pack:custom": "bun pm pack --gzip-level 6 --destination ./dist/packages",
    "pack:all": "bun run scripts/build-and-pack.ts pack-all",
    "pack:workspace": "bun run scripts/build-and-pack.ts pack-all",
    "build:pack": "bun run build && bun pm pack",
    "build:pack:all": "bun run workspace:build && bun run pack:all",
    "dist:create": "bun run scripts/build-and-pack.ts release",
    "dist:manifest": "bun run scripts/build-and-pack.ts manifest",
    "dist:verify": "bun run scripts/build-and-pack.ts verify",
    "dist:clean": "bun run scripts/build-and-pack.ts clean",
    "release:patch": "bun pm version patch && bun run scripts/build-and-pack.ts release",
    "release:minor": "bun pm version minor && bun run scripts/build-and-pack.ts release",
    "release:major": "bun pm version major && bun run scripts/build-and-pack.ts release",
    "ci:pack": "bun pm pack --quiet --destination ./dist/ci --ignore-scripts",
    "ci:build-pack": "bun run build:production && bun run ci:pack",
    "pack:info": "bun pm ls",
    "pack:info:all": "bun pm ls --all",
    "pack:hash": "bun pm hash",
    "pack:cache": "bun pm cache",
    "pack:cache:clean": "bun pm cache rm",
    "pack:trust": "bun pm trust",
    "pack:untrusted": "bun pm untrusted",
    "security:audit:pm": "bun pm audit",
    "security:audit:fix": "bun pm audit --fix",
    "security:trust:add": "bun pm trust add",
    "security:trust:remove": "bun pm trust remove",
    "security:trust:list": "bun pm trust list",
    "security:trust:verify": "bun pm trust verify",
    "cli": "bun run scripts/cli.ts",
    "setup": "bun run scripts/setup-database.js",
    "migrate": "bun run scripts/migrate.ts",
    "seed": "bun run scripts/seed.ts",
    "backup": "bun run scripts/backup.ts",
    "restore": "bun run scripts/restore.ts",
    "env:validate": "bun run scripts/env-manager.ts validate",
    "env:check": "bun run scripts/env-manager.ts check",
    "env:list": "bun run scripts/env-manager.ts list",
    "env:audit": "bun run scripts/env-manager.ts audit",
    "env:performance": "bun run scripts/env-manager.ts performance",
    "env:integration": "bun run scripts/env-manager.ts test",
    "env:setup": "bun run scripts/env-manager.ts setup",
    "env:setup:wizard": "bun run scripts/env-setup-wizard.ts",
    "env:generate": "bun run scripts/env-manager.ts generate",
    "env:backup": "bun run scripts/env-manager.ts backup",
    "env:restore": "bun run scripts/env-manager.ts restore",
    "env:diff": "bun run scripts/env-manager.ts diff",
    "env:sync": "bun run scripts/env-manager.ts sync",
    "env:monitor": "bun run scripts/env-manager.ts monitor",
    "env:export": "bun run scripts/env-manager.ts export",
    "env:import": "bun run scripts/env-manager.ts import",
    "env:demo": "bun run scripts/env-manager.ts demo",
    "env:help": "bun run scripts/env-manager.ts help",
    "env:test": "bun run test-environment-system.bun.ts",
    "env:deploy": "bun run deploy-environment.bun.ts",
    "env:setup-prod": "bun run setup-production.bun.ts",
    "test-cicd": "bun run test-cicd.bun.ts",
    "test:all": "bun run test:quick && bun run test:checklist",
    "drizzle:generate": "drizzle-kit generate:sqlite",
    "drizzle:migrate": "bun run scripts/migrate.ts",
    "debug:test": "bun run scripts/test-debug-endpoints.ts",
    "debug:endpoints": "bun run scripts/test-debug-endpoints.ts",
    "customer:config": "bun run scripts/customer-config-demo.ts",
    "customer:config:create": "bun run scripts/customer-config-demo.ts create",
    "customer:config:list": "bun run scripts/customer-config-demo.ts list",
    "customer:config:update": "bun run scripts/customer-config-demo.ts update",
    "customer:config:test": "bun run scripts/customer-config-demo.ts test",
    "dry-run:api": "bun run scripts/dry-run-manager.ts api",
    "dry-run:db": "bun run scripts/dry-run-manager.ts db",
    "dry-run:deploy": "bun run scripts/dry-run-manager.ts deploy",
    "dry-run:all": "bun run scripts/dry-run-manager.ts all",
    "dry-run:report": "bun run scripts/dry-run-manager.ts report",
    "dry-run:export": "bun run scripts/dry-run-manager.ts export",
    "dry-run:success": "DRY_RUN_SUCCESS_MODE=true bun run scripts/dry-run-manager.ts all",
    "version:manager": "bun run scripts/version-cli.ts",
    "version:show": "bun run scripts/version.ts show",
    "bun:features:demo": "bun run scripts/bun-features-demo.ts",
    "bun:features:demo:custom": "bun --user-agent \"Fire22-Demo/3.0.8\" run scripts/bun-features-demo.ts",
    "bench": "bun run bench/index.ts",
    "bench:micro": "bun run bench/micro-benchmarks.ts",
    "bench:load": "bun run bench/load-testing.ts",
    "bench:memory": "bun run bench/memory-profiler.ts",
    "bench:ci": "bun run bench/ci-benchmarks.ts",
    "bench:report": "bun run bench/benchmark-reporter.ts",
    "bench:format": "bun run bench/benchmark-formatter.ts",
    "bench:all": "bun run bench",
    "bench:dashboard": "open src/performance-dashboard.html",
    "bench:install": "cd bench && bun install",
    "bench:install:frozen": "cd bench && bun install --frozen-lockfile",
    "bench:install:production": "cd bench && bun install --production",
    "bench:install:minimal": "cd bench && bun install --omit=dev --omit=optional",
    "pm": "bun run bench/scripts/package-manager.ts",
    "pm:es": "bun run bench/scripts/package-manager.ts --lang es",
    "pm:pt": "bun run bench/scripts/package-manager.ts --lang pt",
    "pm:fr": "bun run bench/scripts/package-manager.ts --lang fr",
    "pm:link": "bun run bench/scripts/package-manager.ts link workspace",
    "pm:distribute": "bun run bench/scripts/package-manager.ts distribute",
    "docs:hub": "open docs/DOCUMENTATION-HUB.html",
    "docs:open": "open docs/DOCUMENTATION-HUB.html",
    "diagram:version": "bun run scripts/version-diagram-generator.ts version",
    "diagram:build": "bun run scripts/version-diagram-generator.ts build",
    "diagram:package": "bun run scripts/version-diagram-generator.ts package",
    "diagram:deploy": "bun run scripts/version-diagram-generator.ts deploy",
    "diagram:commands": "bun run scripts/version-diagram-generator.ts commands",
    "diagram:all": "bun run scripts/version-diagram-generator.ts all",
    "diagram:tooling": "bun run scripts/diagram-tooling.ts",
    "editor:open": "bun run scripts/editor-integration.ts",
    "editor:config": "bun run scripts/editor-integration.ts config",
    "editor:src": "bun run scripts/editor-integration.ts src",
    "editor:docs": "bun run scripts/editor-integration.ts docs",
    "editor:scripts": "bun run scripts/editor-integration.ts scripts",
    "editor:help": "bun run scripts/editor-integration.ts help",
    "editor:structure": "bun run scripts/editor-integration.ts structure",
    "deploy:canary": "bun run deploy:staging",
    "workspace:list": "bun run packages/workspace-manager.ts list",
    "workspace:build": "bun run packages/workspace-manager.ts build",
    "workspace:test:legacy": "bun run packages/workspace-manager.ts test",
    "workspace:link": "bun run packages/workspace-manager.ts link",
    "workspace:clean": "bun run packages/workspace-manager.ts clean",
    "workspace:install": "bun run packages/workspace-manager.ts install",
    "workspace:install:prod": "bun run packages/workspace-manager.ts install --production",
    "workspace:install:frozen": "bun run packages/workspace-manager.ts install --frozen-lockfile",
    "workspace:update-protocol": "bun run packages/workspace-manager.ts update-protocol",
    "workspace:graph": "bun run packages/workspace-manager.ts graph",
    "workspace:version": "bun run packages/workspace-manager.ts version",
    "workspace:version:patch": "bun run packages/workspace-manager.ts version patch",
    "workspace:version:minor": "bun run packages/workspace-manager.ts version minor",
    "workspace:version:major": "bun run packages/workspace-manager.ts version major",
    "workspace:run": "bun run packages/workspace-manager.ts run",
    "package:link": "bun run bench/scripts/package-manager.ts link",
    "package:unlink": "bun run bench/scripts/package-manager.ts unlink",
    "package:pack": "bun run bench/scripts/package-manager.ts pack",
    "package:distribute": "bun run bench/scripts/package-manager.ts distribute",
    "package:trust": "bun run bench/scripts/package-manager.ts trust",
    "package:untrusted": "bun run bench/scripts/package-manager.ts untrusted",
    "package:migrate": "bun run bench/scripts/package-manager.ts migrate",
    "package:help": "bun run bench/scripts/package-manager.ts commands",
    "workspace": "bun run scripts/workspace-orchestrator-cli.ts",
    "workspace:init": "bun run scripts/workspace-orchestrator-cli.ts init",
    "workspace:status": "bun run scripts/workspace-orchestrator-cli.ts status --verbose",
    "workspace:health": "bun run scripts/workspace-orchestrator-cli.ts health --verbose",
    "workspace:monitor": "bun run scripts/workspace-orchestrator-cli.ts monitor --dashboard",
    "workspace:dashboard": "bun run scripts/workspace-orchestrator-cli.ts dashboard",
    "workspace:split": "bun run scripts/workspace-orchestrator-cli.ts split --verbose",
    "workspace:split:dry": "bun run scripts/workspace-orchestrator-cli.ts split --dry-run --verbose",
    "workspace:reunify": "bun run scripts/workspace-orchestrator-cli.ts reunify --verbose",
    "workspace:benchmark": "bun run scripts/workspace-orchestrator-cli.ts benchmark --dashboard",
    "workspace:publish": "bun run scripts/workspace-orchestrator-cli.ts publish --verbose",
    "workspace:test": "bun run scripts/workspace-orchestrator-cli.ts test",
    "workspace:help": "bun run scripts/workspace-orchestrator-cli.ts help",
    "workspace:orchestrator": "bun run scripts/workspace-cli.ts",
    "workspace:legacy:split": "bun run scripts/workspace-cli.ts split --verbose",
    "workspace:legacy:publish": "bun run scripts/workspace-cli.ts publish --strategy stable --verbose",
    "workspace:legacy:benchmark": "bun run scripts/workspace-cli.ts benchmark --dashboard --alerts",
    "constants:verify": "bun run src/constants-definitions.ts",
    "optimization:analyze": "bun run scripts/run-optimization-analysis.ts",
    "smol:build": "bun run scripts/smol-build-optimizer.ts",
    "shared-utils:test": "bun run scripts/shared-utilities.ts",
    "error-handling:test": "bun run scripts/standardized-error-handler.ts",
    "dev-flow": "bun run scripts/dev-flow.ts",
    "flow": "bun run scripts/dev-flow.ts",
    "find": "bun run scripts/dev-flow.ts find",
    "search": "bun run scripts/dev-flow.ts find",
    "security-demo": "bun run scripts/security-scanner-demo.ts",
    "secrets-demo": "bun run scripts/bun-secrets-demo.ts",
    "env-setup": "bun run scripts/secure-env-manager.ts setup",
    "env-audit": "bun run scripts/secure-env-manager.ts audit",
    "security:integration": "bun run packages/security-core/src/integration-demo.ts",
    "security:setup": "bun add @fire22/security-core && bun run security:integration",
    "workspace:security": "bun run packages/security-core/src/integration-demo.ts",
    "security:scanner-demo": "bun run packages/security-scanner/src/demo.ts",
    "security:scanner-test": "bun test packages/security-scanner/src/scanner.test.ts",
    "security:publish-scanner": "cd packages/security-scanner && bun run prepublishOnly",
    "security:scoped-demo": "bun run packages/security-scanner/src/scoped-demo.ts",
    "security:complete": "bun run security:integration && bun run security:scanner-demo && bun run security:scoped-demo",
    "enhanced:setup": "bun run scripts/setup-enhanced-security.ts setup",
    "enhanced:audit": "bun run scripts/enhanced-secure-config.ts audit",
    "enhanced:scan": "bun run scripts/enhanced-security-scanner.ts scan",
    "enhanced:migrate": "bun run scripts/enhanced-secure-config.ts migrate",
    "enhanced:report": "bun run scripts/setup-enhanced-security.ts report",
    "deploy:secure": "bun run scripts/categories/deploy/enhanced-deploy.ts",
    "deploy:secure:staging": "bun run scripts/categories/deploy/enhanced-deploy.ts -- --environment=staging",
    "deploy:secure:production": "bun run scripts/categories/deploy/enhanced-deploy.ts -- --environment=production",
    "deploy:secure:demo": "bun run scripts/categories/deploy/enhanced-deploy.ts -- --environment=demo",
    "setup:secure": "bun run scripts/setup-secure-credentials.ts",
    "security:scan": "bun run scripts/security-scanner.ts",
    "security:audit": "bun audit --audit-level=high --prod",
    "credentials:clear": "bun run scripts/secure-config.ts --clear",
    "fire22:security": "bun run scripts/fire22-security-suite.ts",
    "fire22:security:test": "bun run scripts/test-fire22-security.ts",
    "fire22:zero-trust": "bun run scripts/zero-trust-credentials.ts",
    "fire22:security:status": "bun run scripts/fire22-security-suite.ts status",
    "api:enhanced:demo": "bun run src/api/enhanced-api-demo.ts",
    "api:enhanced:test": "bun run src/api/enhanced-api-service.ts",
    "worker:enhanced:test": "bun run src/workers/enhanced-security-worker.ts",
    "dashboard": "bun run scripts/fire22-dashboard.ts",
    "dashboard:export": "bun run scripts/fire22-dashboard.ts --export",
    "workflow": "bun run scripts/workflow-automation.ts",
    "workflow:list": "bun run scripts/workflow-automation.ts --list",
    "workflow:daily": "bun run scripts/workflow-automation.ts daily-startup",
    "workflow:pre-commit": "bun run scripts/workflow-automation.ts pre-commit",
    "workflow:deploy": "bun run scripts/workflow-automation.ts deploy-production",
    "workflow:hotfix": "bun run scripts/workflow-automation.ts hotfix",
    "workflow:performance": "bun run scripts/workflow-automation.ts performance-optimization",
    "workflow:security": "bun run scripts/workflow-automation.ts security-audit",
    "workflow:maintenance": "bun run scripts/workflow-automation.ts maintenance",
    "monitor:snapshot": "bun run scripts/monitor-snapshot.ts",
    "monitor:tree": "bun run scripts/monitor-snapshot.ts --tree",
    "monitor:capabilities": "bun run scripts/monitor-snapshot.ts --capabilities",
    "security:health": "bun run scripts/security-health-monitor.ts",
    "security:health:continuous": "bun run scripts/security-health-monitor.ts --continuous",
    "security:health:save": "bun run scripts/security-health-monitor.ts --save",
    "test:auth": "bun run scripts/auth-test-suite.ts",
    "auth:test": "bun run scripts/auth-test-suite.ts",
    "header-test": "bun run src/cli/header-test.ts",
    "header-audit": "bun run src/cli/header-test.ts audit",
    "header-report": "bun run src/cli/header-test.ts report",
    "header-clear": "bun run src/cli/header-test.ts clear",
    "docs:clean": "bun run scripts/maintenance/clean-and-organize-builds.ts",
    "docs:start:clean": "bun run docs:clean && bun run docs:start",
    "docs:build:clean": "bun run docs:clean && bun run docs:build",
    "build:all:clean": "bun run docs:clean && bun run build && bun run docs:build"
  },
  "catalogs": {
    "benchmark": {
      "@types/bun": "^1.2.21",
      "typescript": "^5.9.2",
      "mitata": "^1.0.0"
    },
    "testing": {
      "bun": ">=1.2.0",
      "vitest": "^1.0.0"
    }
  },
  "dependencies": {
    "@cloudflare/workers-types": "^4.20250807.0",
    "@docusaurus/core": "3.8.1",
    "@docusaurus/plugin-content-docs": "3.8.1",
    "@docusaurus/preset-classic": "3.8.1",
    "@fire22/core": "file:../fire22-core-packages/packages/core",
    "@fire22/env-manager": "file:../fire22-core-packages/packages/env-manager",
    "@fire22/middleware": "file:../fire22-core-packages/packages/middleware",
    "@fire22/wager-system": "file:../fire22-wager-system/packages/wager-system",
    "@mdx-js/react": "3.1.0",
    "@sendgrid/mail": "^8.0.0",
    "ansi-colors": "^4.1.3",
    "better-sqlite3": "^9.2.2",
    "chalk": "^5.3.0",
    "crypto-js": "^4.2.0",
    "date-fns": "^3.0.6",
    "drizzle-orm": "^0.29.0",
    "glob": "11.0.3",
    "jsonwebtoken": "9.0.2",
    "kleur": "^4.1.5",
    "node-fetch": "^3.3.2",
    "prism-react-renderer": "2.4.1",
    "react": "19.1.1",
    "react-dom": "19.1.1",
    "stripe": "^14.1.0",
    "twilio": "^4.19.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/better-sqlite3": "^7.6.8",
    "@types/bun": "^1.2.21",
    "@types/jsonwebtoken": "9.0.10",
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "drizzle-kit": "^0.20.9",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.2",
    "prettier": "^3.1.1",
    "typescript": "5.9.2",
    "wrangler": "^3.0.0"
  },
  "peerDependencies": {
    "bun": ">=1.0.0",
    "typescript": ">=5.0.0"
  },
  "optionalDependencies": {
    "dotenv": "^16.3.1",
    "sqlite3": "^5.1.6",
    "redis": "^4.6.0",
    "ioredis": "^5.3.0"
  },
  "trustedDependencies": [
    "@cloudflare/workers-types",
    "wrangler",
    "typescript",
    "bun-types",
    "drizzle-orm",
    "drizzle-kit",
    "better-sqlite3",
    "zod",
    "jsonwebtoken",
    "stripe",
    "@sendgrid/mail",
    "twilio",
    "prettier",
    "eslint",
    "@typescript-eslint/eslint-plugin",
    "@typescript-eslint/parser",
    "eslint-config-prettier",
    "eslint-plugin-prettier",
    "chalk",
    "kleur",
    "ansi-colors",
    "crypto-js",
    "date-fns",
    "node-fetch"
  ],
  "workspaces": [
    "packages/*",
    "bench",
    "workspaces/@fire22-pattern-system",
    "workspaces/@fire22-api-client",
    "workspaces/@fire22-core-dashboard",
    "workspaces/@fire22-sports-betting",
    "workspaces/@fire22-telegram-integration",
    "workspaces/@fire22-build-system",
    "workspaces/@fire22-api-consolidated",
    "workspaces/@fire22-security-registry"
  ],
  "workspaces2": [
    "packages/*",
    "bench",
    "workspaces/@fire22-pattern-system",
    "workspaces/@fire22-api-client",
    "workspaces/@fire22-core-dashboard",
    "workspaces/@fire22-sports-betting",
    "workspaces/@fire22-telegram-integration",
    "workspaces/@fire22-build-system",
    "workspaces/@fire22-api-consolidated",
    "workspaces/@fire22-security-registry"
  ],
  "keywords": [
    "fire22",
    "dashboard",
    "sportsbook",
    "cloudflare",
    "workers",
    "d1",
    "sqlite",
    "typescript",
    "bun",
    "real-time",
    "analytics",
    "monitoring",
    "api",
    "rest",
    "websockets",
    "rate-limiting",
    "webhooks",
    "authentication",
    "caching",
    "logging",
    "metrics",
    "alerts",
    "notifications"
  ],
  "engines": {
    "bun": ">=1.0.0",
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "os": [
    "darwin",
    "linux",
    "win32",
    "freebsd"
  ],
  "cpu": [
    "x64",
    "arm64",
    "armv7",
    "ppc64"
  ],
  "config": {
    "port": 3000,
    "environment": "development",
    "envFiles": {
      "development": ".env.development",
      "staging": ".env.staging",
      "production": ".env.production",
      "test": ".env.test",
      "demo": ".env.demo"
    },
    "envValidation": {
      "required": [
        "JWT_SECRET",
        "ADMIN_PASSWORD",
        "STRIPE_SECRET_KEY",
        "FIRE22_API_URL",
        "FIRE22_TOKEN"
      ],
      "optional": [
        "BOT_TOKEN",
        "CASHIER_BOT_TOKEN",
        "SENDGRID_API_KEY",
        "DEMO_MODE"
      ],
      "secrets": [
        "JWT_SECRET",
        "STRIPE_SECRET_KEY",
        "FIRE22_WEBHOOK_SECRET",
        "ADMIN_PASSWORD"
      ]
    },
    "database": {
      "type": "d1",
      "name": "fire22-dashboard",
      "backups": {
        "enabled": true,
        "schedule": "daily",
        "retention": "30 days",
        "locations": [
          "local",
          "cloudflare",
          "aws-s3"
        ]
      },
      "migrations": {
        "auto": true,
        "path": "./migrations",
        "table": "schema_migrations"
      },
      "pool": {
        "min": 2,
        "max": 10,
        "idleTimeoutMillis": 30000,
        "acquireTimeoutMillis": 60000
      }
    },
    "monitoring": {
      "enabled": true,
      "interval": 60000,
      "endpoints": [
        "/api/health/system",
        "/api/health/database",
        "/api/health/external",
        "/api/health/fire22",
        "/api/health/stripe"
      ],
      "alerts": {
        "email": "alerts@fire22.com",
        "slack": "https://hooks.slack.com/services/...",
        "pagerduty": "https://events.pagerduty.com/...",
        "telegram": "https://api.telegram.org/bot..."
      },
      "metrics": {
        "collector": "prometheus",
        "port": 9090,
        "path": "/metrics"
      }
    },
    "security": {
      "jwt": {
        "secret": "your-secret-key",
        "expiresIn": "24h",
        "algorithm": "HS256",
        "refreshToken": {
          "enabled": true,
          "expiresIn": "7d",
          "rotation": "enabled"
        }
      },
      "cors": {
        "origin": [
          "https://fire22.com",
          "https://dashboard.fire22.com",
          "https://staging.fire22.com"
        ],
        "credentials": true,
        "methods": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "PATCH"
        ],
        "allowedHeaders": [
          "Content-Type",
          "Authorization",
          "X-Requested-With"
        ]
      },
      "rateLimit": {
        "windowMs": 900000,
        "max": "50",
        "skipSuccessfulRequests": false,
        "skipFailedRequests": true
      },
      "helmet": {
        "enabled": true,
        "contentSecurityPolicy": true,
        "hsts": true
      }
    },
    "logging": {
      "level": "info",
      "format": "json",
      "output": "stdout",
      "rotation": {
        "enabled": true,
        "maxSize": "10m",
        "maxFiles": 5
      },
      "transports": [
        {
          "type": "console",
          "level": "info",
          "colorize": true
        },
        {
          "type": "file",
          "level": "error",
          "filename": "logs/error.log"
        },
        {
          "type": "http",
          "level": "warn",
          "url": "https://logs.fire22.com/ingest"
        }
      ]
    },
    "cache": {
      "enabled": true,
      "ttl": 300000,
      "maxSize": 1000,
      "strategy": "lru",
      "layers": [
        {
          "type": "memory",
          "maxSize": "100mb",
          "ttl": 300000
        },
        {
          "type": "redis",
          "url": "redis://localhost:6379",
          "ttl": 3600000
        },
        {
          "type": "cloudflare-kv",
          "namespace": "cache",
          "ttl": 86400000
        }
      ]
    },
    "features": {
      "newFeature": {
        "enabled": true,
        "rollout": "gradual",
        "percentage": 25
      },
      "beta": {
        "enabled": false,
        "whitelist": [
          "nolarose@example.com",
          "alex@fire22.com"
        ]
      },
      "experimental": {
        "enabled": false,
        "flags": [
          "ai-predictions",
          "real-time-analytics",
          "advanced-charts",
          "advanced-notifications"
        ]
      },
      "paymentSystem": {
        "enabled": true,
        "referenceFormat": "PAY-{timestamp}-{random}",
        "autoGeneration": true,
        "validation": {
          "minAmount": 1,
          "maxAmount": 100000,
          "requiredFields": [
            "amount",
            "notes",
            "userId"
          ]
        },
        "telegram": {
          "notifications": true,
          "commands": [
            "/payment",
            "/payment-status",
            "/create-payment",
            "/payment-history"
          ]
        },
        "currencies": [
          "USD",
          "EUR",
          "GBP",
          "JPY"
        ],
        "statuses": [
          "pending",
          "processing",
          "completed",
          "failed",
          "cancelled"
        ]
      }
    }
  },
  "bun": {
    "entrypoints": [
      "src/index.ts",
      "src/index-router.ts",
      "src/index-router-complete.ts",
      "src/worker.ts",
      "src/api.ts"
    ],
    "output": "./dist",
    "target": "bun",
    "minify": false,
    "sourcemap": true,
    "plugins": [
      "html-plugin",
      "css-plugin",
      "typescript-plugin",
      "env-plugin"
    ],
    "external": [
      "sqlite3",
      "redis",
      "ioredis"
    ]
  },
  "wrangler": {
    "name": "dashboard-worker",
    "main": "src/index.ts",
    "compatibility_date": "2024-01-15",
    "compatibility_flags": [
      "nodejs_compat",
      "streams_enable_constructors"
    ],
    "env": {
      "staging": {
        "name": "dashboard-worker-staging",
        "vars": {
          "ENVIRONMENT": "staging",
          "LOG_LEVEL": "info",
          "CACHE_TTL": "1800"
        }
      },
      "production": {
        "name": "dashboard-worker-prod",
        "vars": {
          "ENVIRONMENT": "production",
          "LOG_LEVEL": "warn",
          "CACHE_TTL": "3600"
        }
      },
      "demo": {
        "name": "dashboard-worker-demo",
        "vars": {
          "ENVIRONMENT": "demo",
          "LOG_LEVEL": "debug",
          "CACHE_TTL": "300"
        }
      }
    },
    "vars": {
      "ENVIRONMENT": "staging",
      "VERSION": "2.1.0",
      "LOG_LEVEL": "debug",
      "CACHE_TTL": "900"
    },
    "kv_namespaces": [
      {
        "binding": "CACHE",
        "id": "your-kv-namespace-id",
        "preview_id": "your-preview-kv-namespace-id"
      },
      {
        "binding": "SESSIONS",
        "id": "your-sessions-kv-id",
        "preview_id": "your-sessions-preview-id"
      }
    ],
    "d1_databases": [
      {
        "binding": "DB",
        "database_name": "fire22-dashboard",
        "database_id": "your-d1-database-id"
      }
    ],
    "r2_buckets": [
      {
        "binding": "ASSETS",
        "bucket_name": "fire22-assets"
      }
    ]
  },
  "metadata": {
    "created": "2024-01-15T00:00:00.000Z",
    "lastModified": "2024-12-19T12:00:00.000Z",
    "maintainers": [
      "engineering@fire22.com",
      "backend@fire22.com",
      "frontend@fire22.com",
      "qa@fire22.com",
      "devops@fire22.com"
    ],
    "roadmap": {
      "v2.1.0": "Initial API integrations and Fire22 platform",
      "v2.2.0": "Enhanced monitoring and alerting system",
      "v2.3.0": "Real-time notifications and WebSocket support",
      "v3.0.0": "Multi-tenant architecture and advanced analytics"
    },
    "performance": {
      "targets": {
        "responseTime": "<100ms",
        "throughput": ">1000 req/s",
        "uptime": ">99.9%",
        "memory": "<512mb",
        "cpu": "<80%"
      },
      "benchmarks": {
        "fire22-api": "50ms avg response",
        "database": "5ms avg query",
        "cache": "1ms avg hit"
      }
    },
    "environment": {
      "documentation": "docs/environment-variables.html",
      "cliCommands": [
        "env:validate",
        "env:list",
        "env:check",
        "env:setup",
        "env:audit",
        "env:performance",
        "env:integration",
        "env:demo",
        "fire22:demo"
      ],
      "supportedEnvironments": [
        "development",
        "staging",
        "production",
        "test",
        "demo",
        "canary"
      ],
      "validationRules": {
        "secrets": "Minimum 32 characters",
        "urls": "Must be valid HTTPS URLs",
        "emails": "Must be valid email format",
        "ports": "Must be between 1024 and 65535",
        "timeouts": "Must be positive integers"
      },
      "integrations": {
        "fire22": {
          "status": "active",
          "version": "2.1.0",
          "endpoints": [
            "agents",
            "users",
            "transactions",
            "stats"
          ]
        },
        "stripe": {
          "status": "configured",
          "version": "14.1.0",
          "endpoints": [
            "payments",
            "webhooks",
            "customers"
          ]
        },
        "sendgrid": {
          "status": "configured",
          "version": "8.0.0",
          "endpoints": [
            "mail",
            "templates",
            "stats"
          ]
        }
      }
    },
    "versioning": {
      "lastRelease": "3.0.7",
      "nextRelease": "3.0.7",
      "lastUpdated": "2025-08-27T00:52:32.096Z",
      "current": "3.0.9",
      "releaseType": "patch",
      "buildNumber": 1756255952096
    },
    "build": {
      "build": {
        "timestamp": "2025-08-26T23:04:50.362Z",
        "version": "3.0.5",
        "environment": "development",
        "platform": "darwin",
        "arch": "arm64",
        "nodeVersion": "v24.3.0",
        "bunVersion": "1.2.21"
      },
      "packages": {
        "middleware": {
          "name": "@fire22/middleware",
          "version": "1.0.0",
          "description": "Fire22 Middleware System - Request handling, error formatting, and performance monitoring",
          "size": "0B",
          "buildStatus": "not-built",
          "lastModified": "2025-08-26T22:50:48.591Z"
        },
        "testing-framework": {
          "name": "@fire22/testing-framework",
          "version": "1.0.0",
          "description": "Fire22 Testing Framework - Comprehensive testing utilities, workflows, and validation tools",
          "size": "0B",
          "buildStatus": "not-built",
          "lastModified": "2025-08-26T22:50:53.108Z"
        },
        "wager-system": {
          "name": "@fire22/wager-system",
          "version": "1.0.0",
          "description": "Fire22 Wager System - Financial calculations, wager processing, and risk management",
          "size": "0B",
          "buildStatus": "not-built",
          "lastModified": "2025-08-26T22:50:45.692Z"
        },
        "env-manager": {
          "name": "@fire22/env-manager",
          "version": "1.0.0",
          "description": "Fire22 Environment Manager - Configuration validation, security auditing, and environment switching",
          "size": "0B",
          "buildStatus": "not-built",
          "lastModified": "2025-08-26T22:50:50.786Z"
        }
      },
      "dependencies": {
        "total": 24,
        "production": 11,
        "development": 13,
        "outdated": 0,
        "vulnerabilities": 0
      },
      "performance": {
        "buildTime": 0,
        "memoryUsage": {
          "rss": 29507584,
          "heapTotal": 1186816,
          "heapUsed": 703401,
          "external": 236401,
          "arrayBuffers": 2364
        },
        "cpuUsage": {
          "user": 23663,
          "system": 17227
        },
        "platform": "darwin",
        "arch": "arm64"
      },
      "quality": {
        "lintStatus": "pending",
        "testStatus": "pending",
        "coverageStatus": "pending",
        "buildStatus": "in-progress"
      }
    }
  },
  "files": [
    "dist/**/*",
    "src/**/*",
    "docs/**/*",
    "*.md",
    "scripts/**/*",
    "migrations/**/*",
    "!node_modules/**/*",
    "!tests/**/*",
    "!*.log",
    "!.env*",
    "!coverage/**/*"
  ],
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/",
    "tag": "latest"
  },
  "directories": {
    "lib": "src",
    "bin": "bin",
    "man": "man",
    "doc": "docs",
    "example": "examples",
    "test": "tests"
  }
}