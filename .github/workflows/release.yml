name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.0.0)"
        required: true
        type: string
      prerelease:
        description: "Mark as prerelease"
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

      - name: Run linting
        run: bun run lint

      - name: Type check
        run: bun run typecheck

      - name: Build project
        run: bun run build:all

      - name: Generate changelog
        id: changelog
        run: |
          # Extract version from tag or input
          if [ "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi

          # Generate release notes from CHANGELOG.md
          RELEASE_NOTES=$(awk "/^## ðŸŽ‰ \[${VERSION#v}\]/,/^## ðŸŽ‰ \[.*\]/{if(/^## ðŸŽ‰ \[${VERSION#v}\]/)f=1; else if(/^## ðŸŽ‰ \[.*\]/ && f) exit; if(f) print}" CHANGELOG.md | sed '1d')

          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version || github.ref }}
          release_name: Release ${{ github.event.inputs.version || github.ref }}
          body: ${{ steps.changelog.outputs.release_notes }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}

      - name: Publish to NPM (if applicable)
        if: contains(github.ref, 'v1.') || contains(github.event.inputs.version, 'v1.')
        run: |
          # Only publish major version 1.x.x to NPM
          echo "Publishing to NPM..."
          # npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-changelog:
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update CHANGELOG.md with latest version
        run: |
          # Update CHANGELOG.md with release date
          VERSION="${GITHUB_REF#refs/tags/}"
          DATE=$(date +%Y-%m-%d)
          sed -i "s/## ðŸŽ‰ \[$VERSION\] - YYYY-MM-DD/## ðŸŽ‰ [$VERSION] - $DATE/" CHANGELOG.md

      - name: Commit changelog update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "docs: update changelog for $VERSION release" || echo "No changes to commit"

      - name: Push changelog update
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
