name: 🚀 Deploy Docs Worker

on:
  push:
    branches: [main]
    paths:
      - "docs/**"
      - "docs-worker/**"
      - ".github/workflows/deploy-docs-worker.yml"
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Documentation CDN

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: docs-worker/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./docs-worker
        run: npm ci

      - name: 🔍 Type check
        working-directory: ./docs-worker
        run: npm run typecheck

      - name: 📝 Lint code
        working-directory: ./docs-worker
        run: npm run lint || true

      - name: 🚀 Deploy to Cloudflare
        working-directory: ./docs-worker
        run: |
          echo "Deploying Crystal Clear Docs Worker..."
          npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: 📊 Update deployment status
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;
            const deploymentUrl = 'https://crystal-clear-docs.nolarose1968.workers.dev';

            // Create deployment status
            await github.rest.repos.createDeploymentStatus({
              owner,
              repo,
              deployment_id: context.payload.deployment?.id || 1,
              state: 'success',
              environment_url: deploymentUrl,
              description: 'Documentation CDN deployed successfully'
            });

            // Add comment to PR if this is from a PR
            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.payload.pull_request.number,
                body: `🚀 **Documentation CDN Deployed Successfully!**

                📖 **Live Documentation**: ${deploymentUrl}
                🏗️ **Build Status**: ✅ Success
                ⏱️ **Deployed**: ${new Date().toISOString()}

                The documentation has been automatically deployed to Cloudflare Workers and is now live at the URL above.`
              });
            }

      - name: ❌ Report deployment failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;

            // Create deployment status for failure
            await github.rest.repos.createDeploymentStatus({
              owner,
              repo,
              deployment_id: context.payload.deployment?.id || 1,
              state: 'failure',
              description: 'Documentation CDN deployment failed'
            });

            // Add comment to PR if this is from a PR
            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.payload.pull_request.number,
                body: `❌ **Documentation CDN Deployment Failed**

                🏗️ **Build Status**: ❌ Failed
                ⏱️ **Timestamp**: ${new Date().toISOString()}

                Please check the deployment logs above for details on what went wrong.`
              });
            }

  health-check:
    runs-on: ubuntu-latest
    needs: deploy
    name: Health Check

    steps:
      - name: 🩺 Verify deployment health
        run: |
          echo "🔍 Checking deployment health..."
          for i in {1..10}; do
            if curl -s -f https://crystal-clear-docs.nolarose1968.workers.dev/api/health > /dev/null; then
              echo "✅ Documentation CDN is healthy!"
              curl -s https://crystal-clear-docs.nolarose1968.workers.dev/api/health | jq .
              break
            else
              echo "⏳ Waiting for deployment... (attempt $i/10)"
              sleep 30
            fi
          done

          # Final check
          if curl -s -f https://crystal-clear-docs.nolarose1968.workers.dev/api/health > /dev/null; then
            echo "🎉 Deployment successful and healthy!"
          else
            echo "❌ Deployment failed health check"
            exit 1
          fi

  notify:
    runs-on: ubuntu-latest
    needs: [deploy, health-check]
    if: success()
    name: Notification

    steps:
      - name: 📢 Deployment notification
        run: |
          echo "🚀 Crystal Clear Documentation CDN Deployed Successfully!"
          echo ""
          echo "📖 Live URL: https://crystal-clear-docs.nolarose1968.workers.dev"
          echo "📊 Health Check: https://crystal-clear-docs.nolarose1968.workers.dev/api/health"
          echo "📋 API Info: https://crystal-clear-docs.nolarose1968.workers.dev/api/docs"
          echo ""
          echo "🔧 Features:"
          echo "  • Automatic content fetching from GitHub"
          echo "  • Smart caching with ETags"
          echo "  • Real-time updates on git push"
          echo "  • CDN optimization"
          echo "  • Comprehensive health monitoring"
